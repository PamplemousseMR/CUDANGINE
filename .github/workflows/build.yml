name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.OS }}

    strategy:
      matrix:
        name: [ubuntu_18-04_g++4-8, ubuntu_18-04_g++5, ubuntu_18-04_g++6, ubuntu_18-04_g++7, ubuntu_18-04_g++8]
        include:
        - name: ubuntu_18-04_g++4-8
          OS: ubuntu-18.04
          COMPILER: g++-4.8
          CUDA: 10.1.105-1
          CUDA_SHORT: 10.1
          UBUNTU_VERSION: ubuntu1804

        - name: ubuntu_18-04_g++5
          OS: ubuntu-18.04
          COMPILER: g++-5
          CUDA: 10.1.105-1
          CUDA_SHORT: 10.1
          UBUNTU_VERSION: ubuntu1804

        - name: ubuntu_18-04_g++6
          OS: ubuntu-18.04
          COMPILER: g++-6
          CUDA: 10.1.105-1
          CUDA_SHORT: 10.1
          UBUNTU_VERSION: ubuntu1804

        - name: ubuntu_18-04_g++7
          OS: ubuntu-18.04
          COMPILER: g++-7
          CUDA: 10.1.105-1
          CUDA_SHORT: 10.1
          UBUNTU_VERSION: ubuntu1804
          
        - name: ubuntu_18-04_g++8
          OS: ubuntu-18.04
          COMPILER: g++-8
          CUDA: 10.1.105-1
          CUDA_SHORT: 10.1
          UBUNTU_VERSION: ubuntu1804
          
    steps:
      - uses: actions/checkout@v2

      - name: Package
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get update
              sudo apt-get --assume-yes install ${{ matrix.COMPILER }}
              sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/${{ matrix.COMPILER }} 50
          else
              echo "$RUNNER_OS not supported"
              exit 1
          fi

      - name: CUDA
        run: |
          export INSTALLER=cuda-repo-${{ matrix.UBUNTU_VERSION }}_${{ matrix.CUDA }}_amd64.deb
          wget http://developer.download.nvidia.com/compute/cuda/repos/${{ matrix.UBUNTU_VERSION }}/x86_64/${INSTALLER}
          sudo dpkg -i ${INSTALLER}
          wget https://developer.download.nvidia.com/compute/cuda/repos/${{ matrix.UBUNTU_VERSION }}/x86_64/7fa2af80.pub
          sudo apt-key add 7fa2af80.pub
          sudo apt update -qq
          sudo apt install -y cuda-core-${{ matrix.CUDA_SHORT }} cuda-cudart-dev-${{ matrix.CUDA_SHORT }} cuda-cufft-dev-${{ matrix.CUDA_SHORT }}
          sudo apt clean

      - name: Configure
        run: |
          CUDA_HOME=/usr/local/cuda-${{ matrix.CUDA_SHORT }}
          LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
          PATH=${CUDA_HOME}/bin:${PATH}

          cmake -B ${{github.workspace}}/build_debug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=${{ matrix.COMPILER }}
          cmake -B ${{github.workspace}}/build_release -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=${{ matrix.COMPILER }}

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build_debug
          cmake --build ${{github.workspace}}/build_release