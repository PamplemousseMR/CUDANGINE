language: cpp
sudo: false

matrix:
  include:

    #============================================================
    #
    #                         Debug 
    #
    #============================================================
    #==============================
    #
    #          linux
    #
    #==============================

    - os: linux
      dist: bionic
      env:
      - CUDA=10.1.105-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      - MATRIX_EVAL="BUILD_TYPE=Debug"

    #============================================================
    #
    #                         Release 
    #
    #============================================================
    #==============================
    #
    #          linux
    #
    #==============================

    - os: linux
      dist: bionic
      env:
      - CUDA=10.1.105-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      - MATRIX_EVAL="BUILD_TYPE=Release"

before_install:
  - eval ${MATRIX_EVAL}
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}
  - wget https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip
  - unzip ninja-linux.zip
  - PATH=${PATH}:${PWD}

before_script:
  - cd ${TRAVIS_BUILD_DIR}/..  
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_COMPILER=${CXX} ${TRAVIS_BUILD_DIR} 

script:
  - cmake --build .